apiVersion: management.cattle.io/v3
kind: Cluster
spec:
  agentImageOverride: ""
  answers: {}
  clusterSecrets: {}
  description: ""
  desiredAgentImage: ""
  desiredAuthImage: ""
  displayName: gke-test
  dockerRootDir: /var/lib/docker
  enableClusterAlerting: false
  enableClusterMonitoring: false
  enableNetworkPolicy: false
  fleetWorkspaceName: fleet-default
  gkeConfig:
    clusterAddons:
      horizontalPodAutoscaling: true
      httpLoadBalancing: true
    clusterIpv4Cidr: ""
    clusterName: gke-test
    description: ""
    enableKubernetesAlpha: false
    googleCredentialSecret: cattle-global-data:cc-swv64
    imported: false
    ipAllocationPolicy:
      useIpAliases: true
    kubernetesVersion: 1.22.11-gke.400
    labels: {}
    locations: []
    loggingService: logging.googleapis.com/kubernetes
    maintenanceWindow: ""
    masterAuthorizedNetworks: {}
    monitoringService: monitoring.googleapis.com/kubernetes
    network: default
    networkPolicyEnabled: false
    nodePools:
    - autoscaling: {}
      config:
        diskSizeGb: 100
        diskType: pd-standard
        imageType: COS
        machineType: n1-standard-2
        oauthScopes:
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring
        - https://www.googleapis.com/auth/servicecontrol
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/trace.append
      initialNodeCount: 3
      management:
        autoRepair: true
        autoUpgrade: true
      maxPodsConstraint: 110
      name: nodegroup
      version: 1.22.11-gke.400
    privateClusterConfig: {}
    projectID: test-project-id
    region: ""
    subnetwork: default
    zone: us-central1-c
    autopilotConfig: {}
  internal: false
  localClusterAuthEndpoint:
    enabled: false
  windowsPreferedCluster: false
status:
  conditions:
  - status: Unknown
    type: Provisioned
  driver: GKE
  gkeStatus:
    upstreamSpec:
      testField: "upstream spec is already set"
