apiVersion: management.cattle.io/v3
kind: Cluster
spec:
  agentImageOverride: ""
  answers: {}
  clusterSecrets: {}
  description: ""
  desiredAgentImage: ""
  desiredAuthImage: ""
  displayName: gke-test
  dockerRootDir: /var/lib/docker
  enableClusterAlerting: false
  enableClusterMonitoring: false
  enableNetworkPolicy: false
  fleetWorkspaceName: fleet-default
  gkeConfig:
    clusterAddons:
      horizontalPodAutoscaling: true
      httpLoadBalancing: true
    clusterIpv4Cidr: 10.124.0.0/14
    clusterName: gke-test
    description: ""
    enableKubernetesAlpha: false
    googleCredentialSecret: cattle-global-data:cc-swv64
    imported: false
    ipAllocationPolicy:
      clusterIpv4CidrBlock: 10.124.0.0/14
      clusterSecondaryRangeName: gke-gke-test-pods-fedcba98
      servicesIpv4CidrBlock: 10.0.0.0/20
      servicesSecondaryRangeName: gke-gke-test-services-fedcba98
      useIpAliases: true
    kubernetesVersion: 1.22.11-gke.400
    labels: {}
    locations:
    - us-central1-c
    loggingService: logging.googleapis.com/kubernetes
    maintenanceWindow: ""
    masterAuthorizedNetworks: {}
    monitoringService: monitoring.googleapis.com/kubernetes
    network: default
    networkPolicyEnabled: false
    nodePools:
    - autoscaling: {}
      config:
        diskSizeGb: 100
        diskType: pd-standard
        imageType: COS
        machineType: n1-standard-2
      initialNodeCount: 3
      management:
        autoRepair: true
        autoUpgrade: true
      maxPodsConstraint: 110
      name: nodegroup
      version: 1.22.11-gke.400
    - autoscaling: {}
      config:
        diskSizeGb: 100
        diskType: pd-standard
        imageType: COS
        machineType: n1-standard-2
      initialNodeCount: 3
      management:
        autoRepair: true
        autoUpgrade: true
      maxPodsConstraint: 110
      name: nodegroup2
      version: 1.22.11-gke.400
    privateClusterConfig: {}
    projectID: test-project-id
    region: ""
    subnetwork: default
    zone: us-central1-c
    autopilotConfig:
      enabled: false
  internal: false
  localClusterAuthEndpoint:
    enabled: false
  windowsPreferedCluster: false
status:
  apiEndpoint: https://apiendpoint
  appliedSpec:
    agentImageOverride: ""
    answers: {}
    clusterSecrets: {}
    description: ""
    desiredAgentImage: ""
    desiredAuthImage: ""
    displayName: ""
    enableClusterAlerting: false
    enableClusterMonitoring: false
    enableNetworkPolicy: null
    gkeConfig:
      clusterAddons:
        horizontalPodAutoscaling: true
        httpLoadBalancing: true
      clusterIpv4Cidr: 10.124.0.0/14
      clusterName: gke-test
      description: ""
      enableKubernetesAlpha: false
      googleCredentialSecret: cattle-global-data:cc-swv64
      imported: false
      ipAllocationPolicy:
        clusterIpv4CidrBlock: 10.124.0.0/14
        clusterSecondaryRangeName: gke-gke-test-pods-fedcba98
        servicesIpv4CidrBlock: 10.0.0.0/20
        servicesSecondaryRangeName: gke-gke-test-services-fedcba98
        useIpAliases: true
      kubernetesVersion: 1.22.11-gke.400
      labels: {}
      locations:
      - us-central1-c
      loggingService: logging.googleapis.com/kubernetes
      maintenanceWindow: ""
      masterAuthorizedNetworks: {}
      monitoringService: monitoring.googleapis.com/kubernetes
      network: default
      networkPolicyEnabled: false
      nodePools:
      - autoscaling: {}
        config:
          diskSizeGb: 100
          diskType: pd-standard
          imageType: COS
          machineType: n1-standard-2
        initialNodeCount: 3
        management:
          autoRepair: true
          autoUpgrade: true
        maxPodsConstraint: 110
        name: nodegroup
        version: 1.22.11-gke.400
      - autoscaling: {}
        config:
          diskSizeGb: 100
          diskType: pd-standard
          imageType: COS
          machineType: n1-standard-2
        initialNodeCount: 3
        management:
          autoRepair: true
          autoUpgrade: true
        maxPodsConstraint: 110
        name: nodegroup2
        version: 1.22.11-gke.400
      privateClusterConfig: {}
      projectID: test-project-id
      region: ""
      subnetwork: default
      zone: us-central1-c
      autopilotConfig: {}
    internal: false
    localClusterAuthEndpoint:
      enabled: false
    windowsPreferedCluster: false
  conditions:
  - lastUpdateTime: "2022-08-22T15:25:19-04:00"
    status: "True"
    type: Provisioned
  - lastUpdateTime: "2022-08-22T16:56:11-04:00"
    status: "True"
    type: Updated
  driver: GKE
  gkeStatus:
    upstreamSpec:
      privateClusterConfig: {}
  serviceAccountTokenSecret: cluster-serviceaccounttoken-secret
