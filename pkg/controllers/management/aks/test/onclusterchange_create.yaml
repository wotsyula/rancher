apiVersion: management.cattle.io/v3
kind: Cluster
spec:
  agentImageOverride: ""
  aksConfig:
    authBaseUrl: null
    authorizedIpRanges: null
    azureCredentialSecret: cattle-global-data:cc-26b5h
    baseUrl: null
    clusterName: aks-test
    dnsPrefix: aks-dns-prefix
    dnsServiceIp: null
    dockerBridgeCidr: null
    httpApplicationRouting: null
    imported: false
    kubernetesVersion: 1.23.8
    linuxAdminUsername: azureuser
    loadBalancerSku: Standard
    logAnalyticsWorkspaceGroup: null
    logAnalyticsWorkspaceName: null
    monitoring: null
    networkPlugin: kubenet
    networkPolicy: null
    nodePools:
    - availabilityZones:
      - "1"
      - "2"
      - "3"
      count: 1
      enableAutoScaling: false
      maxPods: 110
      mode: System
      name: agentpool
      orchestratorVersion: 1.23.8
      osDiskSizeGB: 128
      osDiskType: Managed
      osType: Linux
      vmSize: Standard_DS2_v2
    podCidr: null
    privateCluster: false
    privateDnsZone: null
    resourceGroup: aks-resource-group
    resourceLocation: eastus
    serviceCidr: null
    subnet: null
    tags: {}
    virtualNetwork: null
    virtualNetworkResourceGroup: null
    outboundType: null
    managedIdentity: null
    userAssignedIdentity: null
  answers: {}
  clusterSecrets: {}
  description: ""
  desiredAgentImage: ""
  desiredAuthImage: ""
  displayName: aks-test
  dockerRootDir: /var/lib/docker
  enableClusterAlerting: false
  enableClusterMonitoring: false
  enableNetworkPolicy: false
  fleetWorkspaceName: fleet-default
  internal: false
  localClusterAuthEndpoint:
    enabled: false
  windowsPreferedCluster: false
status:
  aksStatus:
    upstreamSpec:
      testfield: "upstream spec is already set"
  conditions:
  - lastUpdateTime: "2022-08-08T10:42:00-04:00"
    status: Unknown
    type: Provisioned
  driver: AKS
