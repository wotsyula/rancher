apiVersion: management.cattle.io/v3
kind: Cluster
metadata:
  annotations:
    authz.management.cattle.io/creator-role-bindings: '{"created":["cluster-owner"],"required":["cluster-owner"]}'
    field.cattle.io/creatorId: user-lgw7g
    lifecycle.cattle.io/create.cluster-agent-controller-cleanup: "true"
    lifecycle.cattle.io/create.cluster-provisioner-controller: "true"
    lifecycle.cattle.io/create.cluster-scoped-gc: "true"
    lifecycle.cattle.io/create.mgmt-cluster-rbac-remove: "true"
  creationTimestamp: "2022-08-08T14:26:21Z"
  finalizers:
    - wrangler.cattle.io/mgmt-cluster-remove
    - controller.cattle.io/cluster-agent-controller-cleanup
    - controller.cattle.io/cluster-scoped-gc
    - controller.cattle.io/cluster-provisioner-controller
    - controller.cattle.io/mgmt-cluster-rbac-remove
  generateName: c-
  generation: 13
  labels:
    cattle.io/creator: norman
  name: c-k4mnv
  resourceVersion: "9822"
  uid: 75f1abf6-dab3-40d4-a0a5-bf9df4e42271
spec:
  agentImageOverride: ""
  aksConfig:
    authBaseUrl: null
    authorizedIpRanges: null
    azureCredentialSecret: cattle-global-data:cc-26b5h
    baseUrl: null
    clusterName: aks-test
    dnsPrefix: aks-dns-prefix
    dnsServiceIp: null
    dockerBridgeCidr: null
    httpApplicationRouting: null
    imported: false
    kubernetesVersion: 1.23.8
    linuxAdminUsername: azureuser
    loadBalancerSku: Standard
    logAnalyticsWorkspaceGroup: null
    logAnalyticsWorkspaceName: null
    monitoring: null
    networkPlugin: kubenet
    networkPolicy: null
    nodePools:
      - availabilityZones:
          - "1"
          - "2"
          - "3"
        count: 1
        enableAutoScaling: false
        maxPods: 110
        mode: System
        name: agentpool
        orchestratorVersion: 1.23.8
        osDiskSizeGB: 128
        osDiskType: Managed
        osType: Linux
        vmSize: Standard_DS2_v2
    podCidr: null
    privateCluster: false
    privateDnsZone: null
    resourceGroup: aks-resource-group
    resourceLocation: eastus
    serviceCidr: null
    subnet: null
    tags: {}
    virtualNetwork: null
    virtualNetworkResourceGroup: null
    outboundType: null
    managedIdentity: null
    userAssignedIdentity: null
  answers: {}
  clusterSecrets: {}
  description: ""
  desiredAgentImage: ""
  desiredAuthImage: ""
  displayName: aks-monday
  dockerRootDir: /var/lib/docker
  enableClusterAlerting: false
  enableClusterMonitoring: false
  enableNetworkPolicy: false
  fleetWorkspaceName: fleet-default
  internal: false
  localClusterAuthEndpoint:
    enabled: false
  windowsPreferedCluster: false
status:
  conditions:
    - lastUpdateTime: "2022-08-08T10:26:25-04:00"
      message: Waiting on aks crd to be initialized
      status: Unknown
      type: Provisioned
  driver: AKS
