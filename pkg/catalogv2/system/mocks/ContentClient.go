// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	repo "helm.sh/helm/v3/pkg/repo"
)

// ContentClient is an autogenerated mock type for the ContentClient type
type ContentClient struct {
	mock.Mock
}

// Index provides a mock function with given fields: namespace, name, targetK8sVersion, skipFilter
func (_m *ContentClient) Index(namespace string, name string, targetK8sVersion string, skipFilter bool) (*repo.IndexFile, error) {
	ret := _m.Called(namespace, name, targetK8sVersion, skipFilter)

	var r0 *repo.IndexFile
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string, bool) (*repo.IndexFile, error)); ok {
		return rf(namespace, name, targetK8sVersion, skipFilter)
	}
	if rf, ok := ret.Get(0).(func(string, string, string, bool) *repo.IndexFile); ok {
		r0 = rf(namespace, name, targetK8sVersion, skipFilter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*repo.IndexFile)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string, string, bool) error); ok {
		r1 = rf(namespace, name, targetK8sVersion, skipFilter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewContentClient creates a new instance of ContentClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewContentClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *ContentClient {
	mock := &ContentClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
